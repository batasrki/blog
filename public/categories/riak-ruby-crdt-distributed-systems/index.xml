<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Riak Ruby Crdt Distributed Systems on (Insightful) Ramblings</title>
    <link>http://example.org/categories/riak-ruby-crdt-distributed-systems/</link>
    <description>Recent content in Riak Ruby Crdt Distributed Systems on (Insightful) Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://example.org/categories/riak-ruby-crdt-distributed-systems/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CRDT for real data in Riak and Ruby</title>
      <link>http://example.org/posts/2013-10-02-crdt-for-real-data-in-riak-and-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013-10-02-crdt-for-real-data-in-riak-and-ruby/</guid>
      <description>Intro In the previous post, I briefly introduced CRDTs in Ruby and have shown a basic usage case for one Conflict-Free Replicated Data Type. Tonight, we will explore one slightly more complicated use case that can be seen in real applications in the wild.
Use case For the purpose of this post, imagine we&amp;rsquo;re running a Netflix clone. We have accounts and we have movies. For the purposes of recommendations, we want to store what movies each account holder has viewed.</description>
    </item>
    
    <item>
      <title>CRDT primer in Riak and Ruby</title>
      <link>http://example.org/posts/2013-07-29-crdt-primer-in-riak-and-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013-07-29-crdt-primer-in-riak-and-ruby/</guid>
      <description>Introduction In this post, I shall attempt how to use CRDTs in a Ruby class, backed by the Riak database. CRDT stands for Commutative Replicated Data Type. There is no Wikipedia entry for this, yet, so I&amp;rsquo;m linking to a blog post which is linking to a paper.
Background CRDTs solve a particular problem well. In a distributed database, like Riak, it is quite possible for a value under a key to receive multiple writes from different clients.</description>
    </item>
    
  </channel>
</rss>